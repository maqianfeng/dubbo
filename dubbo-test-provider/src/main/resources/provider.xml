<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans.xsd
               http://code.alibabatech.com/schema/dubbo
               http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <!--当前项目在整个分布式架构里面的唯一名称，计算依赖关系的标签 参数是可以不配置的，
    这里配置是因为出现了端口的冲突，所以配置 owner 字段，表示属于谁-->
    <dubbo:application name="provider" owner="mqf">
        <dubbo:parameter key="qos.enable" value="true"/>
        <dubbo:parameter key="qos.accept.foreign.ip" value="false"/>
        <dubbo:parameter key="qos.port" value="55555"/>
    </dubbo:application>
    <!--监控中心配置， 用于配置连接监控中心相关信息，可以不配置，不是必须的参数-->
    <dubbo:monitor protocol="registry"/>
    <!--dubbo这个服务所要暴露的服务地址所对应的注册中心 这里我们可以配置 zookeeper 作为我们的注册中心。
    address 是注册中心的地址，这里我们配置的是 N/A 表示由 dubbo 自动分配地址。或者说是一种直连的方式，不通过注册中心。-->
<!--        <dubbo:registry address="N/A"/>-->
    <!--使用zookeeper作为注册中心-->
    <dubbo:registry address="zookeeper://localhost:2181" check="false"/>
    <!--    如果是 zookeeper 集群的话，使用下面的方式。-->
    <!--    <dubbo:registry protocol="zookeeper" address="192.168.11.129:2181,192.168.11.137:2181,192.168.11.138:2181"/>-->
    <!--当前服务发布所依赖的协议；可以配置 dubbo、webserovice、Thrift、Hessain、http-->
    <dubbo:protocol name="dubbo" port="20880"/>
    <!--服务发布的配置，需要暴露的服务接口 当我们服务发布的时候，我们就是通过这个配置将我们的服务发布出去的 失败策略 Failover 失败自动切换-->
    <dubbo:service interface="com.mqf.provider.server.ProviderService" ref="providerService" cluster="failover" retries="2"/>
    <!--Bean bean定义-->
    <bean id="providerService" class="com.mqf.provider.server.ProviderServiceImpl"/>
</beans>
